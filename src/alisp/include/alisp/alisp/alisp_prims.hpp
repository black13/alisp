#pragma once
#include <unordered_map>
static std::unordered_map<std::string,std::string> prime_map = {{"import", "Pimport"},
                                                                {"modref", "Pmodref"},
                                                                {"defun", "Pdefun"},
                                                                {"defmacro", "Pdefmacro"},
                                                                {"defvar", "Pdefvar"},
                                                                {"eval", "Peval"},
                                                                {"eval-file", "Peval_file"},
                                                                {"eval-string", "Peval_string"},
                                                                {"setq", "Psetq"},
                                                                {"set", "Pset"},
                                                                {"quote", "Pquote"},
                                                                {"function", "Pfunction"},
                                                                {"lambda", "Plambda"},
                                                                {"if", "Pif"},
                                                                {"while", "Pwhile"},
                                                                {"dolist", "Pdolist"},
                                                                {"dotimes", "Pdotimes"},
                                                                {"cond", "Pcond"},
                                                                {"unless", "Punless"},
                                                                {"when", "Pwhen"},
                                                                {"progn", "Pprogn"},
                                                                {"progn1", "Pprogn1"},
                                                                {"progn2", "Pprogn2"},
                                                                {"let", "Plet"},
                                                                {"let*", "Pletx"},
                                                                {"funcall", "Pfuncall"},
                                                                {"apply", "Papply"},
                                                                {"backquote", "Pbackquote"},
                                                                {"signal", "Psignal"},
                                                                {"condition-case", "Pcondition_case"},
                                                                {"return", "Preturn"},
                                                                {"break", "Pbreak"},
                                                                {"continue", "Pcontinue"},
                                                                {"exit", "Pexit"},
                                                                {"assert", "Passert"},
                                                                {"assert-not", "Passert_not"},
                                                                {"eq", "Peq"},
                                                                {"equal", "Pequal"},
                                                                {"symbols-list", "Psym_list"},
                                                                {"print", "Pprint"},
                                                                {"println", "Pprintln"},
                                                                {"eprint", "Peprint"},
                                                                {"eprintln", "Peprintln"},
                                                                {"dump", "Pdump"},
                                                                {"dumpstack", "Pdumpstack"},
                                                                {"dumpcallstack", "Pdumpcallstack"},
                                                                {"dumpsystem", "Pdumpsystem"},
                                                                {"dumplicense", "Pdumplicense"},
                                                                {"dumpcredits", "Pdumpcredits"},
                                                                {"read-line", "Pread_line"},
                                                                {"read-char", "Pread_char"},
                                                                {"mapc", "Pmapc"},
                                                                {"mapcar", "Pmapcar"},
                                                                {"car", "Pcar"},
                                                                {"cons", "Pcons"},
                                                                {"head", "Phead"},
                                                                {"last", "Plast"},
                                                                {"init", "Pinit"},
                                                                {"tail", "Ptail"},
                                                                {"push", "Ppush"},
                                                                {"shove", "Pshove"},
                                                                {"delete", "Pdelete"},
                                                                {"remove", "Premove"},
                                                                {"nth", "Pnth"},
                                                                {"range", "Prange"},
                                                                {"length", "Plength"},
                                                                {"clear", "Pclear"},
                                                                {"list", "Plist"},
                                                                {"contains", "Pcontains"},
                                                                {"stream", "Pstream"},
                                                                {"stream-close", "Pclose_stream"},
                                                                {"with-cout", "Pwith_cout"},
                                                                {"with-cin", "Pwith_cin"},
                                                                {"stream-content", "Pstream_content"},
                                                                {"stream-write", "Pstream_write"},
                                                                {"stream-write-line", "Pstream_write_line"},
                                                                {"stream-write-lines", "Pstream_write_lines"},
                                                                {"stream-read", "Pstream_read"},
                                                                {"stream-read-line", "Pstream_read_line"},
                                                                {"stream-read-lines", "Pstream_read_lines"},
                                                                {"file-open", "Pfile_open"},
                                                                {"file-close", "Pfile_close"},
                                                                {"file-read-line", "Pfile_read_line"},
                                                                {"file-write-line", "Pfile_write_line"},
                                                                {"file-has-more", "Pfile_has_more"},
                                                                {"prop-get", "Pprop_get"},
                                                                {"prop-set", "Pprop_set"},
                                                                {"prop-exists", "Pprop_exists"},
                                                                {"prop-list", "Pprop_list"},
                                                                {"pfunction", "Ppfunction"},
                                                                {"psym", "Ppsym"},
                                                                {"plist", "Pplist"},
                                                                {"pint", "Ppint"},
                                                                {"preal", "Ppreal"},
                                                                {"pstring", "Ppstring"},
                                                                {"pfile", "Ppfile"},
                                                                {"pstream", "Ppstream"},
                                                                {"pmemory", "Ppmemory"},
                                                                {"pbyte", "Ppbyte"},
                                                                {"or", "Por"},
                                                                {"and", "Pand"},
                                                                {"not", "Pnot"},
                                                                {"+", "Pplus"},
                                                                {"-", "Pminus"},
                                                                {"/", "Pdev"},
                                                                {"*", "Pmultiply"},
                                                                {">", "Pgt"},
                                                                {">=", "Pgeq"},
                                                                {"<", "Plt"},
                                                                {"<=", "Pleq"},
                                                                {"==", "Peq_math"},
                                                                {"!=", "Pneq"},
                                                                {"mod", "Pmod"},
                                                                {"pow", "Ppow"},
                                                                {"round", "Pround"},
                                                                {"or*", "Pbit_or"},
                                                                {"and*", "Pbit_and"},
                                                                {"xor*", "Pbit_xor"},
                                                                {"inv*", "Pbit_inv"},
                                                                {"<<", "Pleftshift"},
                                                                {">>", "Prightshift"},
                                                                {"min", "Pmin"},
                                                                {"max", "Pmax"},
                                                                {"string-append", "Pstring_append"},
                                                                {"string-prepend", "Pstring_prepend"},
                                                                {"string-equals", "Pstring_equals"},
                                                                {"string-contains", "Pstring_contains"},
                                                                {"string-endswith", "Pstring_endswith"},
                                                                {"string-startswith", "Pstring_startswith"},
                                                                {"string-length", "Pstring_length"},
                                                                {"string-capitalize", "Pstring_capitalize"},
                                                                {"string-find", "Pstring_find"},
                                                                {"string-replace", "Pstring_replace"},
                                                                {"string-replaceall", "Pstring_replaceall"},
                                                                {"string-split", "Pstring_split"},
                                                                {"string-substring", "Pstring_substring"},
                                                                {"string-splitlines", "Pstring_splitlines"},
                                                                {"string-upper", "Pstring_upper"},
                                                                {"string-lower", "Pstring_lower"},
                                                                {"string-strip", "Pstring_strip"},
                                                                {"string-join", "Pstring_join"},
                                                                {"char-isalpha", "Pchar_isalpha"},
                                                                {"char-isdigit", "Pchar_isdigit"},
                                                                {"slice", "Pslice"},
                                                                {"sort", "Psort"},
                                                                {"zip", "Pzip"},
                                                                {"filter", "Pfilter"},
                                                                {"any", "Pany"},
                                                                {"all", "Pall"},
                                                                {"parse-int", "Pint_parse"},
                                                                {"parse-float", "Pfloat_parse"},
                                                                {"to-string", "Pto_string"},
                                                                {"to-char", "Pto_char"}};
