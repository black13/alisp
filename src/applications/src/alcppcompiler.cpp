/*   Alisp - the alisp interpreted language
    Copyright (C) 2020 Stanislav Arnaudov

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any prior version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>
#include <atomic>
#include <functional>
#include <signal.h>
#include <cstring>
#include <vector>
#include <unordered_map>
#include <string_view>

// #include <clipp.hpp>
#include <fmt/format.h>
// #include <rang.hpp>

#include "alisp/config.hpp"
#include "alisp/utility.hpp"
#include "alisp/alisp/alisp_engine.hpp"

using namespace alisp;
using namespace fmt::literals;

unsigned char templ_cpp[] = {
  0x2f, 0x2a, 0x20, 0x20, 0x20, 0x41, 0x6c, 0x69, 0x73, 0x70, 0x20, 0x2d,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x6c, 0x69, 0x73, 0x70, 0x20, 0x69,
  0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x64, 0x20, 0x6c,
  0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x28, 0x43,
  0x29, 0x20, 0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x69,
  0x73, 0x6c, 0x61, 0x76, 0x20, 0x41, 0x72, 0x6e, 0x61, 0x75, 0x64, 0x6f,
  0x76, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67,
  0x72, 0x61, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x66, 0x72, 0x65, 0x65, 0x20,
  0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x3b, 0x20, 0x79, 0x6f,
  0x75, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x72, 0x65, 0x64, 0x69, 0x73, 0x74,
  0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x74, 0x20, 0x61, 0x6e,
  0x64, 0x2f, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x0a,
  0x69, 0x74, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x47, 0x4e, 0x55, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x6c, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4c, 0x69, 0x63,
  0x65, 0x6e, 0x73, 0x65, 0x20, 0x61, 0x73, 0x20, 0x70, 0x75, 0x62, 0x6c,
  0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x62, 0x79, 0x0a, 0x74, 0x68, 0x65,
  0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
  0x72, 0x65, 0x20, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x3b, 0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 0x20, 0x76, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x20, 0x6f, 0x66, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2c, 0x20,
  0x6f, 0x72, 0x0a, 0x28, 0x61, 0x74, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20,
  0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x61, 0x6e, 0x79, 0x20,
  0x70, 0x72, 0x69, 0x6f, 0x72, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
  0x6e, 0x2e, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f,
  0x67, 0x72, 0x61, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x64, 0x69, 0x73, 0x74,
  0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x68, 0x6f, 0x70, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74,
  0x20, 0x69, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20,
  0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x2c, 0x0a, 0x62, 0x75, 0x74, 0x20,
  0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x20, 0x41, 0x4e, 0x59, 0x20,
  0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54, 0x59, 0x3b, 0x20, 0x77, 0x69,
  0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x77,
  0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x0a, 0x4d,
  0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x41, 0x42, 0x49, 0x4c, 0x49,
  0x54, 0x59, 0x20, 0x6f, 0x72, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45, 0x53,
  0x53, 0x20, 0x46, 0x4f, 0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52, 0x54,
  0x49, 0x43, 0x55, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x55, 0x52, 0x50, 0x4f,
  0x53, 0x45, 0x2e, 0x20, 0x20, 0x53, 0x65, 0x65, 0x20, 0x74, 0x68, 0x65,
  0x0a, 0x47, 0x4e, 0x55, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
  0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4c, 0x69, 0x63, 0x65,
  0x6e, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x72, 0x65,
  0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x0a, 0x0a, 0x59,
  0x6f, 0x75, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x68, 0x61,
  0x76, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20,
  0x61, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x47, 0x4e, 0x55, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x6c, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4c, 0x69, 0x63,
  0x65, 0x6e, 0x73, 0x65, 0x20, 0x61, 0x6c, 0x6f, 0x6e, 0x67, 0x0a, 0x77,
  0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f,
  0x67, 0x72, 0x61, 0x6d, 0x3b, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74,
  0x2c, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x53, 0x6f, 0x66, 0x74,
  0x77, 0x61, 0x72, 0x65, 0x20, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x2c, 0x0a, 0x35,
  0x31, 0x20, 0x46, 0x72, 0x61, 0x6e, 0x6b, 0x6c, 0x69, 0x6e, 0x20, 0x53,
  0x74, 0x72, 0x65, 0x65, 0x74, 0x2c, 0x20, 0x46, 0x69, 0x66, 0x74, 0x68,
  0x20, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x2c, 0x20, 0x42, 0x6f, 0x73, 0x74,
  0x6f, 0x6e, 0x2c, 0x20, 0x4d, 0x41, 0x20, 0x30, 0x32, 0x31, 0x31, 0x30,
  0x2d, 0x31, 0x33, 0x30, 0x31, 0x20, 0x55, 0x53, 0x41, 0x2e, 0x20, 0x2a,
  0x2f, 0x0a, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20,
  0x3c, 0x69, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3e, 0x0a, 0x23,
  0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x74, 0x72,
  0x69, 0x6e, 0x67, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
  0x65, 0x20, 0x3c, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3e, 0x0a,
  0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x66, 0x69,
  0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3e, 0x0a, 0x23, 0x69,
  0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x61, 0x74, 0x6f, 0x6d,
  0x69, 0x63, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
  0x20, 0x3c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
  0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c,
  0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x3e, 0x0a, 0x23, 0x69,
  0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x63, 0x73, 0x74, 0x72,
  0x69, 0x6e, 0x67, 0x3e, 0x0a, 0x0a, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c,
  0x75, 0x64, 0x65, 0x20, 0x3c, 0x63, 0x6c, 0x69, 0x70, 0x70, 0x2e, 0x68,
  0x70, 0x70, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
  0x20, 0x3c, 0x66, 0x6d, 0x74, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
  0x2e, 0x68, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
  0x20, 0x3c, 0x72, 0x61, 0x6e, 0x67, 0x2e, 0x68, 0x70, 0x70, 0x3e, 0x0a,
  0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x22, 0x61,
  0x6c, 0x69, 0x73, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
  0x68, 0x70, 0x70, 0x22, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
  0x65, 0x20, 0x22, 0x61, 0x6c, 0x69, 0x73, 0x70, 0x2f, 0x75, 0x74, 0x69,
  0x6c, 0x69, 0x74, 0x79, 0x2e, 0x68, 0x70, 0x70, 0x22, 0x0a, 0x23, 0x69,
  0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x22, 0x61, 0x6c, 0x69, 0x73,
  0x70, 0x2f, 0x61, 0x6c, 0x69, 0x73, 0x70, 0x2f, 0x61, 0x6c, 0x69, 0x73,
  0x70, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x68, 0x70, 0x70,
  0x22, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d,
  0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x61, 0x6c, 0x69, 0x73, 0x70,
  0x3b, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x67, 0x6f, 0x74, 0x5f,
  0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x28, 0x69, 0x6e, 0x74, 0x29, 0x0a,
  0x7b, 0x7d, 0x0a, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x6d, 0x61, 0x69,
  0x6e, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x61, 0x72, 0x67, 0x63, 0x2c, 0x20,
  0x63, 0x68, 0x61, 0x72, 0x20, 0x2a, 0x61, 0x72, 0x67, 0x76, 0x5b, 0x5d,
  0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x73, 0x69, 0x6e,
  0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x61, 0x6c, 0x69, 0x73, 0x70, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e,
  0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x66, 0x73, 0x20,
  0x3d, 0x20, 0x73, 0x74, 0x64, 0x3a, 0x3a, 0x66, 0x69, 0x6c, 0x65, 0x73,
  0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x76, 0x3a, 0x3a, 0x45, 0x6e, 0x76,
  0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6d, 0x5f, 0x65,
  0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x3a, 0x3a,
  0x41, 0x4c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x3c, 0x65, 0x6e, 0x76,
  0x3a, 0x3a, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
  0x74, 0x3e, 0x20, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x7b,
  0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
  0x74, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x76, 0x61, 0x6c,
  0x3a, 0x3a, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x20,
  0x6d, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x28,
  0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
  0x74, 0x2c, 0x20, 0x26, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
  0x29, 0x3b, 0x0a, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e,
  0x73, 0x74, 0x20, 0x73, 0x74, 0x64, 0x3a, 0x3a, 0x73, 0x74, 0x72, 0x69,
  0x6e, 0x67, 0x20, 0x6d, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x3d, 0x20, 0x75, 0x74,
  0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x65, 0x6e, 0x76, 0x5f, 0x73,
  0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x22, 0x48, 0x4f, 0x4d, 0x45, 0x22,
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x73, 0x74, 0x64, 0x3a, 0x3a, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3c,
  0x73, 0x74, 0x64, 0x3a, 0x3a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e,
  0x20, 0x61, 0x72, 0x67, 0x73, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x61, 0x72, 0x67, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
  0x65, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x73,
  0x74, 0x3c, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x3e, 0x28, 0x61, 0x72,
  0x67, 0x63, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f,
  0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x31,
  0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x61, 0x72, 0x67, 0x63, 0x3b, 0x20,
  0x2b, 0x2b, 0x69, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x61, 0x72, 0x67, 0x73, 0x2e, 0x70, 0x75, 0x73, 0x68,
  0x5f, 0x62, 0x61, 0x63, 0x6b, 0x28, 0x61, 0x72, 0x67, 0x76, 0x5b, 0x69,
  0x5d, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x65, 0x6e, 0x76, 0x3a, 0x3a, 0x69, 0x6e, 0x69, 0x74,
  0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x28, 0x29, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, 0x3a, 0x3a, 0x69, 0x6e, 0x69, 0x74,
  0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x28, 0x29, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
  0x3a, 0x3a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69,
  0x6e, 0x67, 0x28, 0x7b, 0x7d, 0x29, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x65, 0x6e, 0x76, 0x3a, 0x3a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
  0x5f, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x28, 0x51, 0x63, 0x6f, 0x6d, 0x6d,
  0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x72, 0x67,
  0x73, 0x2c, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
  0x28, 0x61, 0x72, 0x67, 0x73, 0x29, 0x29, 0x3b, 0x0a, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x73, 0x74, 0x64, 0x3a,
  0x3a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6c, 0x5f, 0x70,
  0x61, 0x74, 0x68, 0x20, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x75, 0x74, 0x69,
  0x6c, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x65, 0x6e, 0x76, 0x5f, 0x73, 0x74,
  0x72, 0x69, 0x6e, 0x67, 0x28, 0x45, 0x4e, 0x56, 0x5f, 0x56, 0x41, 0x52,
  0x5f, 0x4d, 0x4f, 0x44, 0x50, 0x41, 0x54, 0x48, 0x53, 0x29, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x61, 0x75,
  0x74, 0x6f, 0x20, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
  0x65, 0x73, 0x20, 0x3d, 0x20, 0x5b, 0x26, 0x5d, 0x28, 0x61, 0x75, 0x74,
  0x6f, 0x20, 0x26, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x7b, 0x20, 0x56,
  0x6d, 0x6f, 0x64, 0x70, 0x61, 0x74, 0x68, 0x73, 0x2d, 0x3e, 0x63, 0x68,
  0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x28, 0x29, 0x2e, 0x70, 0x75, 0x73,
  0x68, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x28, 0x6d, 0x61, 0x6b, 0x65, 0x5f,
  0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x70, 0x61, 0x74, 0x68, 0x29,
  0x29, 0x3b, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66,
  0x20, 0x28, 0x21, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x65,
  0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x75,
  0x74, 0x6f, 0x20, 0x70, 0x61, 0x74, 0x68, 0x73, 0x20, 0x3d, 0x20, 0x75,
  0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x73, 0x70, 0x6c, 0x69,
  0x74, 0x28, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x2c, 0x20, 0x27,
  0x3a, 0x27, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x73, 0x74, 0x64, 0x3a, 0x3a, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x61,
  0x63, 0x68, 0x28, 0x73, 0x74, 0x64, 0x3a, 0x3a, 0x62, 0x65, 0x67, 0x69,
  0x6e, 0x28, 0x70, 0x61, 0x74, 0x68, 0x73, 0x29, 0x2c, 0x20, 0x73, 0x74,
  0x64, 0x3a, 0x3a, 0x65, 0x6e, 0x64, 0x28, 0x70, 0x61, 0x74, 0x68, 0x73,
  0x29, 0x2c, 0x20, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
  0x65, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x56, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
  0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2d, 0x3e, 0x73, 0x65, 0x74,
  0x28, 0x22, 0x2d, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x2d, 0x2d, 0x22, 0x29,
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x56, 0x64, 0x65, 0x62, 0x75, 0x67,
  0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x75, 0x74, 0x69, 0x6c,
  0x69, 0x74, 0x79, 0x3a, 0x3a, 0x65, 0x6e, 0x76, 0x5f, 0x62, 0x6f, 0x6f,
  0x6c, 0x28, 0x45, 0x4e, 0x56, 0x5f, 0x56, 0x41, 0x52, 0x5f, 0x4e, 0x4f,
  0x44, 0x45, 0x42, 0x55, 0x47, 0x29, 0x20, 0x3f, 0x20, 0x51, 0x6e, 0x69,
  0x6c, 0x20, 0x3a, 0x20, 0x51, 0x74, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x73,
  0x3a, 0x3a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
  0x72, 0x79, 0x28, 0x70, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x29, 0x29, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x61, 0x75, 0x74, 0x6f, 0x20, 0x26,
  0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x66, 0x73,
  0x3a, 0x3a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
  0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x28, 0x70, 0x72, 0x65,
  0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
  0x72, 0x79, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x6d, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
  0x6f, 0x72, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65,
  0x28, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x61, 0x74,
  0x68, 0x28, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x29,
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x61, 0x75, 0x74, 0x6f, 0x20, 0x61, 0x6c, 0x69, 0x73, 0x70, 0x72, 0x63,
  0x20, 0x3d, 0x20, 0x66, 0x73, 0x3a, 0x3a, 0x70, 0x61, 0x74, 0x68, 0x28,
  0x6d, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x6f, 0x72, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x22, 0x2e, 0x61, 0x6c,
  0x69, 0x73, 0x70, 0x72, 0x63, 0x22, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x75, 0x74, 0x69, 0x6c,
  0x69, 0x74, 0x79, 0x3a, 0x3a, 0x65, 0x6e, 0x76, 0x5f, 0x62, 0x6f, 0x6f,
  0x6c, 0x28, 0x45, 0x4e, 0x56, 0x5f, 0x56, 0x41, 0x52, 0x5f, 0x52, 0x43,
  0x29, 0x29, 0x20, 0x7b, 0x20, 0x61, 0x6c, 0x69, 0x73, 0x70, 0x72, 0x63,
  0x20, 0x3d, 0x20, 0x66, 0x73, 0x3a, 0x3a, 0x70, 0x61, 0x74, 0x68, 0x28,
  0x6d, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x6f, 0x72, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x74, 0x69, 0x6c,
  0x69, 0x74, 0x79, 0x3a, 0x3a, 0x65, 0x6e, 0x76, 0x5f, 0x73, 0x74, 0x72,
  0x69, 0x6e, 0x67, 0x28, 0x45, 0x4e, 0x56, 0x5f, 0x56, 0x41, 0x52, 0x5f,
  0x52, 0x43, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69,
  0x66, 0x20, 0x28, 0x66, 0x73, 0x3a, 0x3a, 0x69, 0x73, 0x5f, 0x72, 0x65,
  0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x28, 0x61,
  0x6c, 0x69, 0x73, 0x70, 0x72, 0x63, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d,
  0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65,
  0x76, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x28, 0x61, 0x6c, 0x69,
  0x73, 0x70, 0x72, 0x63, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a
};
unsigned int templ_cpp_len = 2719;



auto dump_cpp(ALObjectPtr obj) {


    switch (obj->type())
     {
       case ALObjectType::INT_VALUE:
           return fmt::format("make_int({})", obj->to_int());
           break;

       case ALObjectType::REAL_VALUE:
           return fmt::format("make_real({})", obj->to_real());
           break;

       case ALObjectType::STRING_VALUE:
           return fmt::format("make_string(\"{}\")", obj->to_string());
           break;

       case ALObjectType::SYMBOL:
           return fmt::format("make_symbol(\"{}\")", obj->to_string());
           break;

       case ALObjectType::LIST:
           std::ostringstream str;
           if (obj->length() == 0)
           {
               str << "Qnil," << "\n";
               break;
           }
          
           str << "make_list(";
           for (auto ob : *obj) {
               str << dump_cpp(ob);
               str << ",";
           }
           str.seekp(-1, std::ios_base::end);
           str << ")";
           return str.str();
          
     }
    
    return std::string{};
}


int main(int argc, char *argv[])
{


    env::Environment env;
    parser::ALParser<alisp::env::Environment> parser{env};

    auto file_content = utility::load_file("/home/arnaud/code/alisp/build/scope.al");

    auto obj_vec = parser.parse(file_content, "__EVAL__");

    std::vector<std::string> syms{};
    
    std::stringstream ss;
    ss << std::string_view{reinterpret_cast<char*>(templ_cpp), templ_cpp_len} << "\n";
    int index = 0;
    for (auto& el : obj_vec ) {
        ss << "    auto sym_" << index++ << " = " << dump_cpp(el) <<  ";\n";
        syms.push_back("sym_"s += std::to_string(index - 1));
    }
    ss  << "\n";
    for (auto& el : syms) {
        ss << fmt::format("    m_evaluator.eval({});", el) << "\n";        
    }
    ss  << "\n";
    ss << "}" << "\n";

    std::ofstream outfile;
    outfile.open("scope.al.cpp");
    outfile << ss.str();
    outfile.close();


    std::stringstream compile_command;
    
    return 0;
}



// file
// optimizations
// output
// c++ standard
// include direcotries
// link libraries [external]
// link libraries [from alisp]
// warnings
// definitions


// Compiling
// /usr/bin/c++  -DAL_PRELUDE_DIR=\"/home/arnaud/core.d/usr/share/alisp/prelude\" -DENABLE_LINE_TRACE -DENABLE_OBJECT_DOC -DENABLE_STACK_TRACE -DLINK_MODULES -DREADLINE_AVAILABLE -I/home/arnaud/code/alisp/build/src/include -I/home/arnaud/code/alisp/src/include -I/home/arnaud/code/alisp/libs/include -I/home/arnaud/code/alisp/src/applications/include -I/home/arnaud/code/alisp/src/applications/src -I/home/arnaud/code/alisp/src/utility/include -I/home/arnaud/code/alisp/src/alisp/include -I/home/arnaud/code/alisp/src/streams/include -I/home/arnaud/code/alisp/src/management/include -isystem /home/arnaud/.conan/data/fmt/6.0.0/bincrafters/stable/package/038baac88f4c7bfa972ce5adac1616bed8fe2ef4/include  -g    -fdiagnostics-color=always -Wall -Wextra -Wshadow -Wnon-virtual-dtor -Wold-style-cast -Wcast-align -Wunused -Woverloaded-virtual -Wpedantic -Wconversion -Wsign-conversion -Wnull-dereference -Wdouble-promotion -Wformat=2 -Wmisleading-indentation -Wduplicated-cond -Wduplicated-branches -Wlogical-op -Wuseless-cast -pthread -std=gnu++17 -o templ.cpp.o -c ./templ.cpp 


// Linking
// /usr/bin/c++  templ.cpp.o  -O3 -o ./templ   -L/home/arnaud/.conan/data/fmt/6.0.0/bincrafters/stable/package/038baac88f4c7bfa972ce5adac1616bed8fe2ef4/lib  -Wl,-rpath,/home/arnaud/.conan/data/fmt/6.0.0/bincrafters/stable/package/038baac88f4c7bfa972ce5adac1616bed8fe2ef4/lib:/home/arnaud/code/alisp/build/lib lib/libalisp_language.so -lreadline -lstdc++fs -ldl lib/libalisp_fileio.so lib/libalisp_math.so lib/libalisp_time.so lib/libalisp_system.so lib/libalisp_platform.so lib/libalisp_memory.so lib/libalisp_util.so -pthread lib/libalisp_streams.so lib/libalisp_management.so /home/arnaud/.conan/data/fmt/6.0.0/bincrafters/stable/package/038baac88f4c7bfa972ce5adac1616bed8fe2ef4/lib/libfmtd.a
